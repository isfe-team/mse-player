{"version":3,"file":"pcmToWav-esm.js","sources":["../src/pcmToWav.ts"],"sourcesContent":["\n/**\n * pcmToWav\n * @example\n * pcmToWav(file).then((src) => $audio.src = src)\n */\nexport default function pcmToWav (file: Blob, sampleRate = 16000, sampleBits = 16, channelCount = 1) {\n  const reader = new FileReader()\n\n  // no need to `removeEventListener` if smart enough\n  const promise = new Promise((resolve, reject) => {\n    reader.addEventListener('load', () => {\n      const buffer = addWavHeader(reader.result as ArrayBuffer, sampleRate, sampleBits, channelCount)\n      resolve(bufferToBase64(buffer))\n    })\n\n    reader.addEventListener('error', (err) => {\n      reject(err)\n    })\n  })\n\n  reader.readAsArrayBuffer(file)\n\n  return promise\n}\n\n/**\n * addWavHeader\n */\nfunction addWavHeader (samples: ArrayBuffer, sampleRate: number, sampleBits: number, channelCount: number) {\n  const dataLength = samples.byteLength\n  const buffer = new ArrayBuffer(44 + dataLength)\n  const view = new DataView(buffer)\n  function writeString (view: DataView, offset: number, str: string) {\n    for (let i = 0; i < str.length; i++) {\n      view.setUint8(offset + i, str.charCodeAt(i))\n    }\n  }\n  let offset = 0\n  /* 资源交换文件标识符 */\n  writeString(view, offset, 'RIFF'); offset += 4\n  /* 下个地址开始到文件尾总字节数,即文件大小-8 */\n  view.setUint32(offset, /*32*/ 36 + dataLength, true); offset += 4\n  /* WAV文件标志 */\n  writeString(view, offset, 'WAVE'); offset += 4\n  /* 波形格式标志 */\n  writeString(view, offset, 'fmt '); offset += 4\n  /* 过滤字节,一般为 0x10 = 16 */\n  view.setUint32(offset, 16, true); offset += 4\n  /* 格式类别 (PCM形式采样数据) */\n  view.setUint16(offset, 1, true); offset += 2\n  /* 通道数 */\n  view.setUint16(offset, channelCount, true); offset += 2\n  /* 采样率,每秒样本数,表示每个通道的播放速度 */\n  view.setUint32(offset, sampleRate, true); offset += 4\n  /* 波形数据传输率 (每秒平均字节数) 通道数×每秒数据位数×每样本数据位/8 */\n  view.setUint32(offset, sampleRate * channelCount * (sampleBits / 8), true); offset +=4\n  /* 快数据调整数 采样一次占用字节数 通道数×每样本的数据位数/8 */\n  view.setUint16(offset, channelCount * (sampleBits / 8), true); offset += 2\n  /* 每样本数据位数 */\n  view.setUint16(offset, sampleBits, true); offset += 2\n  /* 数据标识符 */\n  writeString(view, offset, 'data'); offset += 4\n  /* 采样数据总数,即数据总大小-44 */\n  view.setUint32(offset, dataLength, true); offset += 4\n  function floatTo32BitPCM (output: DataView, offset: number, input: ArrayBuffer) {\n    const i32xs = new Int32Array(input)\n    for (let i = 0; i < i32xs.length; i++, offset += 4) {\n      output.setInt32(offset, i32xs[i], true)\n    }\n  }\n  function floatTo16BitPCM (output: DataView, offset: number, input: ArrayBuffer){\n    const i16xs = new Int16Array(input)\n    for (let i = 0; i < i16xs.length; i++, offset+=2) {\n      output.setInt16(offset, i16xs[i], true)\n    }\n  }\n  function floatTo8BitPCM (output: DataView, offset: number, input: ArrayBuffer) {\n    const i8xs = new Int8Array(input)\n    for (let i = 0; i < i8xs.length; i++, offset++){\n      output.setInt8(offset, i8xs[i])\n    }\n  }\n  if (sampleBits === 16) {\n    floatTo16BitPCM(view, 44, samples)\n  } else if (sampleBits === 8) {\n    floatTo8BitPCM(view, 44, samples)\n  } else {\n    floatTo32BitPCM(view, 44, samples)\n  }\n  return view.buffer\n}\n\n/**\n * bufferToBase64\n */\nfunction bufferToBase64 (buffer: ArrayBuffer) {\n  const content = new Uint8Array(buffer).reduce((data, byte) => {\n    return data + String.fromCharCode(byte)\n  }, '')\n\n  return `data:audio/wav;base64,${btoa(content)}`\n}\n"],"names":[],"mappings":"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"}